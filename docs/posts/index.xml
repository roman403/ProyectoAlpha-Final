<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on </title>
    <link>https://roman403.github.io/ProyectoAlpha-Final/posts/</link>
    <description>Recent content in Posts on </description>
    <generator>Hugo</generator>
    <language>es</language>
    <lastBuildDate>Sun, 09 Feb 2025 16:58:45 +0100</lastBuildDate>
    <atom:link href="https://roman403.github.io/ProyectoAlpha-Final/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Backup</title>
      <link>https://roman403.github.io/ProyectoAlpha-Final/posts/backup/</link>
      <pubDate>Sun, 09 Feb 2025 16:58:45 +0100</pubDate>
      <guid>https://roman403.github.io/ProyectoAlpha-Final/posts/backup/</guid>
      <description>&lt;p&gt;Para hacer backup de las máquinas que tenemos instaladas en AWS, podemos utilizar el servicio AWS Backup.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/backup1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Iniciamos sesión en tu cuenta de AWS y abrimos la consola de administración.&lt;/p&gt;&#xA;&lt;p&gt;Seleccionamos &amp;ldquo;Servicios&amp;rdquo; en la barra superior y escribimos &amp;ldquo;AWS Backup&amp;rdquo; en la barra de búsqueda.&lt;/p&gt;&#xA;&lt;p&gt;Hacemos clic en &amp;ldquo;Crear plan de copia de seguridad&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/backup2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Configuramos el plan de backup según nuestras necesidades, como la frecuencia de las copias de seguridad y la retención de datos. En nuestro caso haremos backup de todas las máquinas&lt;/p&gt;</description>
    </item>
    <item>
      <title>CORREO</title>
      <link>https://roman403.github.io/ProyectoAlpha-Final/posts/correo/</link>
      <pubDate>Sun, 09 Feb 2025 16:58:45 +0100</pubDate>
      <guid>https://roman403.github.io/ProyectoAlpha-Final/posts/correo/</guid>
      <description>&lt;p&gt;Empezamos instalando postfix&lt;/p&gt;&#xA;&lt;p&gt;sudo apt-get update&#xA;sudo apt-get install postfix&lt;/p&gt;&#xA;&lt;p&gt;Nombre de sistema de correo ponemos nuestro dominio&lt;/p&gt;&#xA;&lt;p&gt;selecionamos sitio de internet&lt;/p&gt;&#xA;&lt;p&gt;Archivo de configuracion de postfix&#xA;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/MAINCF.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;creamos lo usuarios&lt;/p&gt;&#xA;&lt;p&gt;sudo adduser cliente1&#xA;sudo adduser cliente2&lt;/p&gt;&#xA;&lt;p&gt;Para mandar un correo de un usuario a otro usuario usamos:&#xA;desde el clinte1&#xA;mail &lt;a href=&#34;mailto:client2@darkkingdragon.com&#34;&gt;client2@darkkingdragon.com&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/cliente1envia.jfif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Para comprobar que lo ha recibido el cliente2 nos loegamos como el y lo comprobamos&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/cliente2Recibe.jfif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;sudo apt update&#xA;sudo apt install dovecot-imapd dovecot-pop3d&lt;/p&gt;</description>
    </item>
    <item>
      <title>MOODLE</title>
      <link>https://roman403.github.io/ProyectoAlpha-Final/posts/moodle/</link>
      <pubDate>Sun, 09 Feb 2025 16:58:45 +0100</pubDate>
      <guid>https://roman403.github.io/ProyectoAlpha-Final/posts/moodle/</guid>
      <description>&lt;p&gt;Vamos a instalar una herramienta en la instancia de Nginx/moodle. Para ello nos conectamos a ella a través de la instancia externa. En esta instancia ya tenemos instalado Mariadb, PHP, y Apache.&lt;/p&gt;&#xA;&lt;p&gt;Creamos una base de datos para Moodle&lt;/p&gt;&#xA;&lt;p&gt;Accedemos a Mariadb y creamos la base de datos llamada moodle, un usuario y le damos privilegios.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/M1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Descargamos y configuramos Moodle en la carpeta /var/www/html&#xA;sudo yum install -y git&lt;/p&gt;</description>
    </item>
    <item>
      <title>PAGINA WEB VISUAL</title>
      <link>https://roman403.github.io/ProyectoAlpha-Final/posts/paginawebvisual/</link>
      <pubDate>Sun, 09 Feb 2025 16:58:45 +0100</pubDate>
      <guid>https://roman403.github.io/ProyectoAlpha-Final/posts/paginawebvisual/</guid>
      <description>&lt;h3 id=&#34;parte-visual&#34;&gt;Parte Visual&lt;/h3&gt;&#xA;&lt;h1 id=&#34;está-será-la-vista-a-nivel-visual-que-tendrán-los-usuarios&#34;&gt;Está será la vista a nivel visual que tendrán los usuarios&lt;/h1&gt;&#xA;&lt;h2 id=&#34;http-externa&#34;&gt;http externa&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/1.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;https-externa&#34;&gt;https externa&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/2.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;pagina-de-error&#34;&gt;pagina de error&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/3.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;http-del-interno&#34;&gt;http del interno&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/4.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;https-del-interno&#34;&gt;https del interno&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/6.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Seguridad</title>
      <link>https://roman403.github.io/ProyectoAlpha-Final/posts/seguridad/</link>
      <pubDate>Sun, 09 Feb 2025 16:56:40 +0100</pubDate>
      <guid>https://roman403.github.io/ProyectoAlpha-Final/posts/seguridad/</guid>
      <description>&lt;h2 id=&#34;conexión-segura&#34;&gt;Conexión segura&lt;/h2&gt;&#xA;&lt;p&gt;Usamos ssh y par de claves para verificar una buena conexion a nuestros servidores. Para poder transferir datos usamos el comando scp tambien usando un par de claves. Para los servidores de la red privada restringimos las conexiones de ip de fuera de la red.&lt;/p&gt;&#xA;&lt;h2 id=&#34;usuarios-y-contraseñas&#34;&gt;Usuarios y contraseñas&lt;/h2&gt;&#xA;&lt;p&gt;Para ciertos servicios usamos usuarios y contraseñas para evitar que no todos puedan conectarse aunque esten en la red privada.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Wordpress</title>
      <link>https://roman403.github.io/ProyectoAlpha-Final/posts/wordpress/</link>
      <pubDate>Sun, 09 Feb 2025 16:24:52 +0100</pubDate>
      <guid>https://roman403.github.io/ProyectoAlpha-Final/posts/wordpress/</guid>
      <description>&lt;h3 id=&#34;instalacion&#34;&gt;Instalacion&lt;/h3&gt;&#xA;&lt;p&gt;Para su instalacion deberemos instalar un servidor mariadb y el php (seria lo suyo tener tambien el paquete de php-pfm)&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/imagenwd1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/imagenwd2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/imagenwd3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/imagenwd4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Ahora deberemos poner tanto el php-fpm y el mariadb tanto enabled cómo iniciarlos.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/imagenwd5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Ahora en mariadb deberemos crear una base de datos y un usuario para poder hacer que wordpress funcione.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/imagenwd6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Ahora wordpress cuenta con un usuario para poder conectarse y realizar sus funciones, ahora vamos a configurar nginx para que pueda servir la pagina php de wordpress.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DNS</title>
      <link>https://roman403.github.io/ProyectoAlpha-Final/posts/dns/</link>
      <pubDate>Sun, 09 Feb 2025 12:19:03 +0100</pubDate>
      <guid>https://roman403.github.io/ProyectoAlpha-Final/posts/dns/</guid>
      <description>&lt;p&gt;Primer paso crear las máquinas en AWS y con la contraseña generada nos conectamos usando el acceso remoto de Windows poniendo de usuario Administrator y la ip pública de la máquina&lt;/p&gt;&#xA;&lt;p&gt;Se ha usado Windows Server 2022&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/dn1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Una vez nos hemos conectado, hay que instalar el DNS en roles y características&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/dn2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Nos metemos en herramientas administrativas y dns&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/dn3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Creamos una zona nueva primaria&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/dn4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Con este dominio&lt;/p&gt;</description>
    </item>
    <item>
      <title>HUGO</title>
      <link>https://roman403.github.io/ProyectoAlpha-Final/posts/hugo/</link>
      <pubDate>Sun, 09 Feb 2025 12:19:03 +0100</pubDate>
      <guid>https://roman403.github.io/ProyectoAlpha-Final/posts/hugo/</guid>
      <description>&lt;h1 id=&#34;documentación-con-hugo-y-github-pages&#34;&gt;Documentación con Hugo y GitHub Pages&lt;/h1&gt;&#xA;&lt;h2 id=&#34;1-instalar-hugo&#34;&gt;1. Instalar Hugo&lt;/h2&gt;&#xA;&lt;p&gt;En Debian:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt update&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install hugo -y&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Verifica la instalación:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-crear-un-nuevo-sitio-con-hugo&#34;&gt;2. Crear un nuevo sitio con Hugo&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo new site mi-documentacion&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd mi-documentacion&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/temahugo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;3-agregar-el-tema-hugo-tale&#34;&gt;3. Agregar el tema &lt;code&gt;hugo-tale&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;p&gt;El tema &lt;code&gt;tale&lt;/code&gt; es una excelente opción para documentación porque ofrece una navegación clara y estructurada.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git init&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule add https://github.com/alex-shpak/hugo-tale.git themes/hugo-tale&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Configura el tema en &lt;code&gt;hugo.toml&lt;/code&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pagina Web</title>
      <link>https://roman403.github.io/ProyectoAlpha-Final/posts/servicios/</link>
      <pubDate>Sun, 09 Feb 2025 12:19:03 +0100</pubDate>
      <guid>https://roman403.github.io/ProyectoAlpha-Final/posts/servicios/</guid>
      <description>&lt;h2 id=&#34;nginx-interno&#34;&gt;Nginx interno&lt;/h2&gt;&#xA;&lt;h3 id=&#34;configuración&#34;&gt;Configuración&lt;/h3&gt;&#xA;&lt;p&gt;La instalación de Nginx será en la máquina de REDHAT.&lt;/p&gt;&#xA;&lt;p&gt;Nos conectamos a la máquina mediante SSH. Y luego mediante el agent ssh entramos en la maquina redhat al no poder conectarnos directamente. Lo primero que hare sera instalar el nginx.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/ImagenNGX4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Ahora deberemos cambiar la configuración de SELinux a 0 para poder evitar cualquier fallo.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/imagenNGX5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Enviamos los documentos html con el comando scp.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/imagenNGX6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Ahora iremos al fichero de configuración de nginx.&lt;/p&gt;</description>
    </item>
    <item>
      <title>VPN</title>
      <link>https://roman403.github.io/ProyectoAlpha-Final/posts/vpn/</link>
      <pubDate>Sun, 09 Feb 2025 12:19:03 +0100</pubDate>
      <guid>https://roman403.github.io/ProyectoAlpha-Final/posts/vpn/</guid>
      <description>&lt;p&gt;Instalamos Docker, Docker compose y wireguard&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/magen1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Creamos el directorio donde va a trabajar el contenedor y cambiamos el usuario y grupo al que pertenece&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/magen2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Creamos el fichero de Docker-compose&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/magen3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Nos situamos en el directorio /opt/wireguard-server y en este lanzamos el Docker-compose&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/magen4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Verificamos que se ha creado el contenedor y está activo&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://roman403.github.io/ProyectoAlpha-Final/magen5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
